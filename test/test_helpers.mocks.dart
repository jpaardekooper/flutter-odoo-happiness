// Mocks generated by Mockito 5.0.7 from annotations
// in flutter_happiness_poc/test/test_helpers.dart.
// Do not manually edit this file.

import 'dart:async' as _i6;

import 'package:flutter_happiness_poc/services/local_storage.dart' as _i7;
import 'package:http/src/base_client.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:odoo_rpc/src/odoo_client.dart' as _i5;
import 'package:odoo_rpc/src/odoo_session.dart' as _i3;
import 'package:shared_preferences/shared_preferences.dart' as _i4;

// ignore_for_file: comment_references
// ignore_for_file: unnecessary_parenthesis

// ignore_for_file: prefer_const_constructors

// ignore_for_file: avoid_redundant_argument_values

class _FakeBaseClient extends _i1.Fake implements _i2.BaseClient {}

class _FakeOdooSession extends _i1.Fake implements _i3.OdooSession {}

class _FakeSharedPreferences extends _i1.Fake implements _i4.SharedPreferences {
}

/// A class which mocks [OdooClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockOdooClient extends _i1.Mock implements _i5.OdooClient {
  MockOdooClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get baseURL =>
      (super.noSuchMethod(Invocation.getter(#baseURL), returnValue: '')
          as String);
  @override
  set baseURL(String? _baseURL) =>
      super.noSuchMethod(Invocation.setter(#baseURL, _baseURL),
          returnValueForMissingStub: null);
  @override
  String get frontendLang =>
      (super.noSuchMethod(Invocation.getter(#frontendLang), returnValue: '')
          as String);
  @override
  set frontendLang(String? _frontendLang) =>
      super.noSuchMethod(Invocation.setter(#frontendLang, _frontendLang),
          returnValueForMissingStub: null);
  @override
  _i2.BaseClient get httpClient =>
      (super.noSuchMethod(Invocation.getter(#httpClient),
          returnValue: _FakeBaseClient()) as _i2.BaseClient);
  @override
  set httpClient(_i2.BaseClient? _httpClient) =>
      super.noSuchMethod(Invocation.setter(#httpClient, _httpClient),
          returnValueForMissingStub: null);
  @override
  _i6.Stream<_i3.OdooSession> get sessionStream =>
      (super.noSuchMethod(Invocation.getter(#sessionStream),
              returnValue: Stream<_i3.OdooSession>.empty())
          as _i6.Stream<_i3.OdooSession>);
  @override
  _i6.Stream<_i5.OdooLoginEvent> get loginStream =>
      (super.noSuchMethod(Invocation.getter(#loginStream),
              returnValue: Stream<_i5.OdooLoginEvent>.empty())
          as _i6.Stream<_i5.OdooLoginEvent>);
  @override
  _i6.Stream<bool> get inRequestStream =>
      (super.noSuchMethod(Invocation.getter(#inRequestStream),
          returnValue: Stream<bool>.empty()) as _i6.Stream<bool>);
  @override
  _i6.Future<dynamic> get inRequestStreamDone =>
      (super.noSuchMethod(Invocation.getter(#inRequestStreamDone),
          returnValue: Future<dynamic>.value(null)) as _i6.Future<dynamic>);
  @override
  void close() => super.noSuchMethod(Invocation.method(#close, []),
      returnValueForMissingStub: null);
  @override
  _i6.Future<dynamic> callRPC(dynamic path, dynamic funcName, dynamic params) =>
      (super.noSuchMethod(Invocation.method(#callRPC, [path, funcName, params]),
          returnValue: Future<dynamic>.value(null)) as _i6.Future<dynamic>);
  @override
  _i6.Future<dynamic> callKw(dynamic params) =>
      (super.noSuchMethod(Invocation.method(#callKw, [params]),
          returnValue: Future<dynamic>.value(null)) as _i6.Future<dynamic>);
  @override
  _i6.Future<_i3.OdooSession> authenticate(
          String? db, String? login, String? password) =>
      (super.noSuchMethod(
              Invocation.method(#authenticate, [db, login, password]),
              returnValue: Future<_i3.OdooSession>.value(_FakeOdooSession()))
          as _i6.Future<_i3.OdooSession>);
  @override
  _i6.Future<void> destroySession() =>
      (super.noSuchMethod(Invocation.method(#destroySession, []),
          returnValue: Future<void>.value(null),
          returnValueForMissingStub: Future.value()) as _i6.Future<void>);
  @override
  _i6.Future<dynamic> checkSession() =>
      (super.noSuchMethod(Invocation.method(#checkSession, []),
          returnValue: Future<dynamic>.value(null)) as _i6.Future<dynamic>);
}

/// A class which mocks [LocalStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalStorage extends _i1.Mock implements _i7.LocalStorage {
  MockLocalStorage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.SharedPreferences get sharedPreferences =>
      (super.noSuchMethod(Invocation.getter(#sharedPreferences),
          returnValue: _FakeSharedPreferences()) as _i4.SharedPreferences);
  @override
  set token(String? _token) =>
      super.noSuchMethod(Invocation.setter(#token, _token),
          returnValueForMissingStub: null);
  @override
  _i6.Future<void> saveOdooSession(_i3.OdooSession? session) =>
      (super.noSuchMethod(Invocation.method(#saveOdooSession, [session]),
          returnValue: Future<void>.value(null),
          returnValueForMissingStub: Future.value()) as _i6.Future<void>);
  @override
  _i6.Future<void> clearOdooSession() =>
      (super.noSuchMethod(Invocation.method(#clearOdooSession, []),
          returnValue: Future<void>.value(null),
          returnValueForMissingStub: Future.value()) as _i6.Future<void>);
}
