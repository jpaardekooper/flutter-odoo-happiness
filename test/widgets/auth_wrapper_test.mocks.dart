// Mocks generated by Mockito 5.0.7 from annotations
// in flutter_happiness_poc/test/widgets/auth_wrapper_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i6;
import 'dart:ui' as _i7;

import 'package:flutter_happiness_poc/services/auth/auth_service.dart' as _i5;
import 'package:flutter_happiness_poc/services/auth/auth_state.dart' as _i4;
import 'package:flutter_happiness_poc/services/local_storage.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:odoo_rpc/src/odoo_client.dart' as _i2;

// ignore_for_file: comment_references
// ignore_for_file: unnecessary_parenthesis

// ignore_for_file: prefer_const_constructors

// ignore_for_file: avoid_redundant_argument_values

class _FakeOdooClient extends _i1.Fake implements _i2.OdooClient {}

class _FakeLocalStorage extends _i1.Fake implements _i3.LocalStorage {}

class _FakeAuthState extends _i1.Fake implements _i4.AuthState {}

/// A class which mocks [AuthService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthService extends _i1.Mock implements _i5.AuthService {
  MockAuthService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.OdooClient get client => (super.noSuchMethod(Invocation.getter(#client),
      returnValue: _FakeOdooClient()) as _i2.OdooClient);
  @override
  _i3.LocalStorage get storage =>
      (super.noSuchMethod(Invocation.getter(#storage),
          returnValue: _FakeLocalStorage()) as _i3.LocalStorage);
  @override
  String get database =>
      (super.noSuchMethod(Invocation.getter(#database), returnValue: '')
          as String);
  @override
  _i4.AuthState get value => (super.noSuchMethod(Invocation.getter(#value),
      returnValue: _FakeAuthState()) as _i4.AuthState);
  @override
  set value(_i4.AuthState? newValue) =>
      super.noSuchMethod(Invocation.setter(#value, newValue),
          returnValueForMissingStub: null);
  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);
  @override
  _i6.Future<dynamic> checkSession() =>
      (super.noSuchMethod(Invocation.method(#checkSession, []),
          returnValue: Future<dynamic>.value(null)) as _i6.Future<dynamic>);
  @override
  _i6.Future<void> signin(String? email, String? pass) =>
      (super.noSuchMethod(Invocation.method(#signin, [email, pass]),
          returnValue: Future<void>.value(null),
          returnValueForMissingStub: Future.value()) as _i6.Future<void>);
  @override
  _i6.Future<void> logout() =>
      (super.noSuchMethod(Invocation.method(#logout, []),
          returnValue: Future<void>.value(null),
          returnValueForMissingStub: Future.value()) as _i6.Future<void>);
  @override
  String toString() =>
      (super.noSuchMethod(Invocation.method(#toString, []), returnValue: '')
          as String);
  @override
  void addListener(_i7.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#addListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void removeListener(_i7.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#removeListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  void notifyListeners() =>
      super.noSuchMethod(Invocation.method(#notifyListeners, []),
          returnValueForMissingStub: null);
}
